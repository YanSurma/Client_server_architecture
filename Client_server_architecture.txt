Клиент-серверная архитектура

1) Client_Server
Клиент - отправляет запрос на сервер для получения какой-либо информации
Сервер - принимает запрос от клиента и обрабатывает его (условно может обратиться к БД, чтобы сделать выборку определенных данных)
Особенности такой модели заключаются в том, что пользователь отправляет определенный запрос на сервер, где тот системно обрабатывается и конечный результат отсылается клиенту. В возможности сервера входит одновременное обслуживание сразу нескольких клиентов.
Параметры, которые могут реализоваться на стороне сервера:
1. Хранение, защита и доступ к данным;
2. Работа с поступающими клиентскими запросами;
3. Процесс отправки ответа клиенту.
Параметры, которые могут реализоваться на стороне клиента:
1. Площадка по предоставлению пользовательского графического интерфейса;
2. Формулировка запроса к серверу и его последующая отправка;
3. Получение итогов запроса и отправка дополнительной группы команд (запросы на добавление, обновление информации, удаление группы данных).

2) Что такое HTTP и HTTPS
HTTP - это протокол передачи гипертекста, основанный на клиент-серверной архитектуре. Использует порт 80. Данные при передаче не шифруются.
HTTPS - это расширение протокола HTTP, поддерживающее шифрование посредством протоколов  SSL и TLS . Использует порт 443.

3) HTTP методы
HTTP определяет множество методов запроса, которые указывают какое действие необходимо совершить. 
Примеры методов:
GET
	Метод GET запрашивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные.

HEAD
	HEAD запрашивает ресурс так же, как и метод GET, но без тела ответа.

POST
	POST используется для отправки сущностей к определённому ресурсу. Часто вызывает изменение состояния или какие-то побочные эффекты на сервере.

PUT
	PUT заменяет все текущие представления ресурса данными запроса.

DELETE
	DELETE удаляет указанный ресурс.

CONNECT
	CONNECT устанавливает "туннель" к серверу, определённому по ресурсу.

OPTIONS
	OPTIONS используется для описания параметров соединения с ресурсом.

TRACE
	TRACE выполняет вызов возвращаемого тестового сообщения с ресурса.

PATCH
	PATCH используется для частичного изменения ресурса.


4) HTTP статус коды сервера
Код состояния HTTP - часть ответа сервера при запросах по протоколу HTTP. Первая цифра числа указывает на класс состояния.
1xx: Informational (информационные):
2xx: Success (успешно)
3xx: Redirection (перенаправление)
4xx: Client Error (ошибка клиента)
5xx: Server Error (ошибка сервера)

5) Что такое ядро браузера 
Браузер состоит из оболочки и ядра.  Оболочка это меню, панель инструментов, и т.д, что предназначено для работы с пользовательским интерфейсом. Ядро в свою очередь отвечает за движок рендеринга, получение содержимого веб страницы (HTML, XML, изображения и т.д), организацию информации (CSS), а также вывод отображения веб-страницы на экран.

6) Какие браузеры какие ядра используют
Safari - ядро Webkit с открытым исходным кодом
Firefox - ядро Gecko с открытым исходным кодом
Internet Exloper - ядро EdgeHTML с закрытым исходным кодом
Chrome - ядро Blink с открытым исходным кодом, являющимся наиболее часто используемым ыв разработке браузеров.

7) Что такое API
API (APPLICATION PROGRAMMING INTERFACE) - это набор функций/протокол, позволяющий взаимодействовать одной программе с другой. 

8) Что такое эндпоинты
Эндпоинт (конечная точка) - представляет собой шлюз, который соединяет серверные процессыв с внешним интерфейсом. Простыми словами - это адрес на который отправляются сообщения. Эндпоинты работают вместе с методами API. Это определенные URL-адреса, которые приложение использует для связи со сторонними службами и своими пользователями. URL — это роут, который может обрабатывать разные методы запроса. Каждый тип запроса — это отдельный эндпоинт.

9) URL (URI, URL, URN)
URI - это строка символов, которая используется для идентификации какого-либо ресурса по его адресу или по его имени, либо по тому и тому вместе.
URL - это строка символов, которая используется для идентификации какого-либо ресурса, но только по его адресу, по его местоположению
URN - строка символов, которая используется для идентификации ресурса по имени

10) Идемпотентные HTTP методы
Идемпотентный метод - метод, повторная реализация которого имеет тот же эффект, не изменяющий состояние сервера. Идемпотентный метод не должен иметь никаких побочных эффектов, кроме сбора статистики или подобных операций. Корректно реализованные методы GET, HEAD, PUT и DELETE идемпотентны, но не метод POST. Также все безопасные методы являются идемпотентными.

11) Безопасные HTTP методы
Метод HTTP является безопасным, если он не меняет состояние сервера. Другими словами, безопасный метод проводит операции "только чтение" (read-only). Несколько следующих методов HTTP безопасные: GET, HEAD или OPTIONS. Все безопасные методы являются также идемпотентными. . Браузеры могут вызывать безопасные методы, не опасаясь причинить вред серверу: это позволяет им выполнять некоторые действия, например, предварительная загрузка без риска

12) Идентификация, Аутентификация, Авторизация
Идентификация - это процедура проверки по идентификатору (логин, пароль, телефон и т.д). Идентификация происходит при попытке входа в какую-то систему (например вход в почту через логин пароль или вход в опер. систему через пароль)
Аутентификация - процедура проверки подлинности (условно разблокировка телефона через отпечаток пальца 
Авторизация - предоставление доступа к какому либо ресурсу (авторизация через соц сеть на сайте)

13) Что такое IP
IP (Internet Protocol) - цифровой идентификатор, присваиваемый устройству, которое работает в условиях публичной или локальной сети на основе протоколов TCP/IP.

14) Что такое октеты в DNS
Октет - единица цифровой информации, состоящая из восьми битов (1 байт).
В IP 4 октета. 1 октет = 8 битам. IP содержит 4 значения в диапозоне от 0-255. 
Длина записи 32 бита в 4 октетах
Пример IP: 192.168.18.1
Здесь 192 - 1 октет
168 - 2 октет
18 - 3 октет
1 - 4 октет
IPv6
Длина записи 128 бит
DNS-сервер - это сервер или группа серверов, которые хранят IP-адреса сайтов. Сервер хранит информацию о том, какому IP-адресу соответствует  то или иное доменное имя.
Обычно используют два DNS-сервера: первичный и вторичный. Но их может быть и больше. Большее число DNS-серверов повышает надёжность доступа к вашему домену: если один окажется недоступен, ответит другой.
DNS-зона — это логическое пространство, которое объединяет доменные имена ваших ресурсов и содержит нужные ресурсные записи. C конкретным доменным именем может быть связан не только веб-сайт, но и, например, почтовый сервер. И у них могут быть разные адреса.

15) Что такое порт, сколько портов у Linux сервера
Порт - целое неотрицательное число, записываемое в заголовках протоколов транспортного уровня сетевой модели OSI (TCP, UDP, SCTP, DCCP). Грубо говоря разграничивает приложения на сервере, чтоб было понятно, к какому приложению делается запрос. Ибо на сервере много приложений, а IP у него один.
443 - HTTPS
80 - HTTP
Для операционной системы Linux существуют 3 разных типа сетевых портов:
Хорошо известные порты (0-1023) – зарезервированы для операционной системы и основных сервисов
Зарегистрированные порты (1024-49151) – которые могут использоваться приложениями, конкретными службами и пользователями
Динамические и / или частные порты (49152-65535)

16) Уровни OSI
OSI - сетевая модель, посредством которой различные устройства могут взаимодействовать друг с другом.
Уровни:
1. Физический (Physical) 
2. Канальный ( Data Link)
3. Сетевой (Network)
4. Транспортный (Transport)
5. Сеансовый (Session)
6. Представления (Presentation)
7. Прикладной (Application)

17) Хедеры http запросов
Заголовки http позволяют клиенту и серверу отправлять дополнительную информацию с HTTP запросом или ответом. 

Первая строка HTTP-запроса называется линией запроса и состоит из трёх частей:
- "method"  указывает, какой это запрос. Наиболее распространённые методы GET, POST и HEAD.
- "path" , как правило, является частью URL-адреса, который идёт после host (домена). Например, если запрос "https://net.tutsplus.com/tutorials/other/top-20-mysql-best-practices/" , часть path будет "/tutorials/other/top-20-mysql-best-practices/".
- Часть "protocol" содержит "HTTP" и версию, которая обычно 1.1 в современных браузерах.
Остальная часть запроса содержит HTTP headers как пары "Name: Value" в каждой строке. Они содержат различную информацию о HTTP-запросе и вашем браузере. Например, строка "User-Agent" предоставляет информацию о версии браузера и операционной системе, которую вы используете. "Accept-Encoding"  сообщает серверу, может ли ваш браузер принимать сжатый output, например gzip.









